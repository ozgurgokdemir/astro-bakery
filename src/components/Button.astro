---
import type { HTMLAttributes } from 'astro/types';
import { cva } from 'class-variance-authority';
import Children from '@/components/Children.astro';

export const buttonStyles = cva(
  'flex items-center justify-center whitespace-nowrap rounded-xl text-white text-xl',
  {
    variants: {
      variant: {
        primary: 'bg-primary hover:bg-primary/90 focus-visible:bg-primary/90',
        secondary:
          'bg-secondary hover:bg-secondary/90 focus-visible:bg-secondary/90',
      },
      size: {
        medium: 'h-12 gap-2 px-6 font-normal',
        large: 'h-14 gap-3 px-10 font-bold',
      },
    },
    defaultVariants: {
      variant: 'primary',
      size: 'large',
    },
  }
);

type Props = HTMLAttributes<'button'> & {
  variant?: 'primary' | 'secondary';
  size?: 'medium' | 'large';
  asChild?: boolean;
};

const {
  variant,
  size,
  asChild,
  type = 'button',
  class: className,
  ...props
} = Astro.props;

const styles = buttonStyles({ variant, size, className });
---

{
  asChild ? (
    <Children slots={Astro.slots} args={[styles]} />
  ) : (
    <button {type} class={styles} {...props}>
      <slot />
    </button>
  )
}
