---
import type { HTMLAttributes } from 'astro/types';
import { cx } from 'class-variance-authority';

type Props = HTMLAttributes<'textarea'> & {
  id: string;
  label: string;
};

const { id, label, required = true, class: className, ...props } = Astro.props;
---

<div class={cx('flex flex-col gap-2', className)}>
  <label for={id} class="font-primary text-heading-xl font-bold text-brand">
    {label}
  </label>
  <textarea
    {id}
    name={id}
    {required}
    rows="1"
    class="focus-visible:border-brand-hover ring-brand-hover resize-none overflow-y-hidden rounded-md border border-primary bg-surface px-3 py-[0.8875rem] font-secondary text-body-md font-regular text placeholder:text-secondary/50 focus-visible:outline-none focus-visible:ring-1"
    {...props}></textarea>
</div>

<script>
  const textarea = document.querySelector('textarea')!;

  const baseHeight = textarea.clientHeight;
  const computedStyles = getComputedStyle(textarea);
  const lineHeight = parseInt(computedStyles.lineHeight, 10);

  function handleInput(event: Event) {
    const textarea = event.target as HTMLTextAreaElement;

    textarea.style.setProperty('height', '0');
    const totalHeight = textarea.scrollHeight;
    textarea.style.setProperty('height', 'auto');

    const textHeight = totalHeight - baseHeight + lineHeight;
    const numberOfLines = textHeight / lineHeight;

    textarea.setAttribute('rows', numberOfLines.toString());
  }

  textarea.addEventListener('input', handleInput);
</script>
